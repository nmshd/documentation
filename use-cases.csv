ID;Title;Layer;Facade;Function;Description;Feature Category;Tech Category;Status;Comments;Actor;Component;Trigger;Precondition;Result;Priority;Complexity;Size;CREATED_AT;CHANGED_AT;Link auf Testcode;published;Link auf Demo;Require
A01;Get app version information;User Interface;;;;;App;DONE;;User;App;;;;n/a;n/a;n/a;;;;default;;RS4, RT1, RY1
A02;Start app without parameters;User Interface;;;;;App;DONE;;User;App;;;;n/a;n/a;n/a;;;;default;;RT1
A03;Start app with parameters by using link;User Interface;;;;;App;DONE;;User;App;;;;n/a;n/a;n/a;;;;default;;
A04;Show (screen) <Screen>;User Interface;;;The app navigates to the desired screen by itself.;;App;DONE;;User;App;;;;n/a;n/a;n/a;;;;default;;
A10;Refresh (screen) <Screen>;User Interface;;;The app refreshes the current screen.;;App;DONE;;User;App;;;;n/a;n/a;n/a;;;;default;;
A11;Navigate to (screen): <Screen>;Human;Screen;;The user navigates manually to the desired screen. If the screen has preconditions, these preconditions are considered to be fulfilled (e.g. a Profile has been selected and authenticated first).;;User Action;DONE;;User;App;;;;n/a;n/a;n/a;;;;default;;
A12;Select: <Item> (on screen);Human;Screen;;The user selects an item or action from the current screen. There should be a show/navigation use case before using this use case (to define the screen).;;User Action;DONE;;User;App;;;;n/a;n/a;n/a;;;;default;;
A13;Enter: <Data> (on screen);Human;Screen;;The user enters data into the current screen. There should be a show/navigation use case before using this use case (to define the screen).;;User Action;DONE;;User;App;;;;n/a;n/a;n/a;;;;default;;
A14;Scan: <QR-Code> (on different device);Human;Screen;;The user scans a QR-Code from a different device by the app.;;User Action;DONE;;User;App;;;;n/a;n/a;n/a;;;;default;;
A15;Device: <External UseCase>;Human;Screen;;The user processes an external use case on the device, e.g. share something by another app or select a file to upload.;;User Action;DONE;;User;App;;;;n/a;n/a;n/a;;;;default;;
A16;Positive: <Action>;Human;Screen;;The user triggers a positive action on the current screen, i.e. a submit or approval . There should be a show/navigation use case before using this use case (to define the screen).;;User Action;DONE;;User;App;;;;n/a;n/a;n/a;;;;default;;
A17;Negative: <Action>;Human;Screen;;The user triggers a negative action on the current screen, i.e. a reject. There should be a show/navigation use case before using this use case (to define the screen).;;User Action;DONE;;User;App;;;;n/a;n/a;n/a;;;;default;;
A18;Cancel: <Action>;Human;Screen;;The user triggers a cancel action on the current screen, e.g. to postpone a decision. There should be a show/navigation use case before using this use case (to define the screen).;;User Action;DONE;;User;App;;;;n/a;n/a;n/a;;;;default;;
AR1;Get AppRuntime health status;Device;AppRuntime;getHealth;;;AppRuntime;CHANGES REQUIRED;Only returning true -> could be offline/online indication?;App;AppRuntime;;;;LOW;;;;;;default;;
AR2;Get AppRuntime version information;Device;AppRuntime;;;;AppRuntime;DONE;;App;AppRuntime;;;;n/a;n/a;n/a;;;;default;;
ARP1;Create Profile with new Identity;Device;AccountServices;createAccount;A Profile needs to be created in order to use the App. Without a Profile, a very limited set of features is available. In order to create a Profile, the App's privacy policy and possibly end-user license agreements needs to be accepted.;Multi-profile;Profiles;DONE;;User;AppRuntime;;;A Profile has been set up;n/a;n/a;n/a;;;;default;;
ARP2;Get Profiles;Device;AccountServices;getAccounts;The User needs to get all Profiles on the Device and their metadata.;Multi-profile;Profiles;DONE;No Queries?;App;AppRuntime;;;;n/a;n/a;n/a;;;;default;;
ARP3;Get Profile;Device;AccountServices;getProfile;;Multi-profile;Profiles;DONE;;App;AppRuntime;;;;n/a;n/a;n/a;;;;default;;
ARP4;Get Profile by Enmeshed Address;Device;AccountServices;getProfileByAddress;;Multi-profile;Profiles;DONE;;App;AppRuntime;;;;n/a;n/a;n/a;;;;default;;
ARP5;Clear all profiles;Device;AccountServices;clearAccounts;;Multi-profile;Profiles;CHANGES REQUIRED;;User;AppRuntime;;;;LOW;;;;;;default;;
ARP6;Onboard Device by Device Onboarding Token;Device;AccountServices;onboardAccount;;Multi-device;Profiles;QUESTIONS;Naming;User;AppRuntime;;;;n/a;n/a;n/a;;;;default;;
ARP7;Restore Identity by revovery data;Device;;;;Identity Hardening;Profiles;OPEN;;User;AppRuntime;;A backup has been created for this Profile;The Profile has been restored by the backup;LOW;LOW;M;;;;default;;
ARS1;Select Profile / Profile Login / Create Profile Session;Device;AppRuntime;selectAccount;;Multi-profile;Profiles;CHANGES REQUIRED;"Why is this not within AccountServices?
Password needs to be taken into consideration";User;AppRuntime;;A pin / password has been set up for this Profile;"The Device knows which Profile should be used for the user interface or any action.
    If a specific action was triggered to select the Profile, the action is now executed
    If not, the User is redirected to the Profile's Start Screen";LOW;;;;;;default;;
ARS2;Notify Backbone of unauthorized Profile access;Transport;;;Possible other Devices of the Identity should be notified, if the pin or password has been wrongly entered multiple times. This notification could happen by the use of the Backbone, in addition to a possible central tracking of failed login attempts on Devices.;Identity Hardening;Profiles;QUESTIONS;;AppRuntime;AppRuntime;A wrong pin / password in the Profile Login has been entered multiple times;A pin / password has been set up for this Profile;;LOW;MEDIUM;L;;;;default;;
ARS3;Set-up or change password of Profile;Device;;;A password for a Profile can be set up or changed by the User. Additionally, a password hint can be entered to help the User remembering the password.;Identity Hardening;Profile;IDEA;;User;AppRuntime;;Profile has been selected (and has been logged into);A (new) password for this Profile is stored;LOW;HIGH;L;;;;default;;
ARS4;Remove Profile from Device;Transport;;;"An Identity can be removed from the current Device (but will be kept for other Devices, e.g. to offboard one Device). Additionally, a Profile can be removed from another onboarded Device (e.g. for wiping another Device).
If no other Device has been set up for the Profile, removing the Profile would trigger the Delete Identity from Backbone use case.";Multi-profile;Profile;OPEN;;User;AppRuntime;;"Profile has been selected (and has been logged into)
Other Devices has been onboarded for this Identity";The Profile is removed from the Device;HIGH;LOW;S;;;;default;;
ARS5;Delete Identity from Backbone;Transport;;;An Identity can be deleted from the Backbone completely.;;Profile;OPEN;;User;AppRuntime;;Profile has been selected (and has been logged into);The Identity has been removed from the Identity;HIGH;HIGH;L;;;;default;;
ARS6;Create Identity recovery data;Transport;;;"The User can (and should) create a local and offline backup of the selected Profile. The backup contains enough information to restore the complete Identity on a future Device and thus needs to be exported to the current Device in order to be shared, printed out or stored on a secure media.
The backup contains very sensitive data and thus needs to be kept secret and securely stored. It should be explained to the User how the backup should be handled and that it only keeps private information about a single Profile.";Identity Hardening;Profile;OPEN;;User;AppRuntime;;Profile has been selected (and has been logged into);A backup has been created;LOW;HIGH;L;;;;default;;
ARS7;Rename Profile;Device;AccountServices;renameAccount;Profiles can be renamed by the User to an arbitrary name in order to distinguish them.;Multi-profile;Profile;DONE;;User;AppRuntime;;;The Profile has been renamed;n/a;n/a;n/a;;;;default;;
ARS7;Set-up or change auto logout of Profile;Device;;;If a password for a Profile has been set up, an auto logout can be enabled.;Identity Hardening;Profile;IDEA;;User;AppRuntime;;;;LOW;MEDIUM;S;;;;default;;
C01;Get the Connector version information;Device;Connector;;;;Monitoring;DONE;;Integrator;Connector;;;;n/a;n/a;n/a;;;;default;;
C02;Get the number of requests and the status codes that were returned by the Connector.;Device;Connector;;;;Monitoring;DONE;;Integrator;Connector;;;;n/a;n/a;n/a;;;;default;;
C03;Configure: <Config Property>;Device;Connector;;;;Configuration;DONE;;Integrator;Connector;;;;n/a;n/a;n/a;;;;default;;
C04;POST: <REST Endpoint>;Device;Connector;;;;Integration;DONE;;Integrator;Connector;;;;n/a;n/a;n/a;;;;default;;
C05;GET: <REST Endpoint>;Device;Connector;;;;Integration;DONE;;Integrator;Connector;;;;n/a;n/a;n/a;;;;default;;
C06;PUT: <REST Endpoint>;Device;Connector;;;;Integration;DONE;;Integrator;Connector;;;;n/a;n/a;n/a;;;;default;;
C07;DELETE: <REST Endpoint>;Device;Connector;;;;Integration;DONE;;Integrator;Connector;;;;n/a;n/a;n/a;;;;default;;
CR1;Create Profile with new Identity;Device;ConnectorRuntime;create;An account needs to be created in order to use the Connector.;;Bootstrap;DONE;;Device;ConnectorRuntime;;;;n/a;n/a;n/a;;;;default;;
CR2;Get the Connector health status;Device;ConnectorRuntime;getHealth;;;Bootstrap;DONE;;Integrator;ConnectorRuntime;;;;n/a;n/a;n/a;;;;default;;
CR3;Get support Information;Device;ConnectorRuntime;getSupportInformation;;;Monitoring;DONE;;Integrator;ConnectorRuntime;;;;n/a;n/a;n/a;;;;default;;
CR4;Set up global exception handling;Device;ConnectorRuntime;setupGlobalExceptionHandling;;;Bootstrap;QUESTIONS;;Device;ConnectorRuntime;;;;n/a;n/a;n/a;;;;default;;
IAR1;Create Automation Rule;Consumption;AutomationRuleFacade;;;;Automation Rules;IDEA;;Identity;Runtime;;;;LOW;HIGH;L;;;;default;;
IAR2;Query Automation Rules;Consumption;AutomationRuleFacade;;;;Automation Rules;IDEA;;Identity;Runtime;;;;LOW;LOW;S;;;;default;;
IAR3;Get Automation Rule;Consumption;AutomationRuleFacade;;;;Automation Rules;IDEA;;Identity;Runtime;;;;LOW;LOW;S;;;;default;;
IAR4;Update Automation Rule;Consumption;AutomationRuleFacade;;;;Automation Rules;IDEA;;Identity;Runtime;;;;LOW;LOW;S;;;;default;;
IAR5;Delete Automation Rule;Consumption;AutomationRuleFacade;;;;Automation Rules;IDEA;;Identity;Runtime;;;;LOW;LOW;S;;;;default;;
RA1;Create an Attribute;Consumption;AttributesFacade;createAttribute;;Normalized attributes;Attributes;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RA10;Execute a ThirdPartyAttributeQuery;Consumption;AttributesFacade;executeThirdpartyAttributeQuery;;Cross-identity attribute sharing;Attributes;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RA11;Succeed Attribute;Consumption;AttributesFacade;succeedAttribute;;Cross-identity attribute sharing;Attributes;QUESTIONS;;Identity;Runtime;;;;HIGH;MEDIUM;M;;;;default;;
RA12;Update Attribute;Consumption;AttributesFacade;updateAttribute;;Normalized attributes;Attributes;QUESTIONS;;Identity;Runtime;;;;HIGH;MEDIUM;M;;;;default;;
RA13;Share Attribute;Consumption;AttributesFacade;shareAttribute;;Cross-identity attribute sharing;Attributes;QUESTIONS;Shouldn't we create requestItems here?;Identity;Runtime;;;;;;;;;;default;;
RA14;Delete shared Attribute;Consumption;AttributesFacade;;;;Attributes;OPEN;;Identity;Runtime;;;;HIGH;MEDIUM;M;;;;default;;
RA15;Create requestItem to delete shared Attribute;Consumption;;;;;Attributes;IDEA;;Identity;Runtime;;;;LOW;LOW;S;;;;default;;
RA2;Query Attributes;Consumption;AttributesFacade;getAttributes;;Normalized attributes;Attributes;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RA3;Get Attributes of peer;Consumption;AttributesFacade;getPeerAttributes;;Normalized attributes;Attributes;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RA4;Get Attributes shared to peer;Consumption;AttributesFacade;getSharedToPeerAttributes;;Cross-identity attribute sharing;Attributes;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RA5;Get Attribute;Consumption;AttributesFacade;getAttribute;Fetches the attribute with the given `id`.;Normalized attributes;Attributes;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RA6;Create a shared Attribute copy;Consumption;AttributesFacade;createSharedAttributeCopy;;Cross-identity attribute sharing;Attributes;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RA7;Delete Attribute;Consumption;AttributesFacade;deleteAttribute;;Normalized attributes;Attributes;QUESTIONS;What exactly is implemented here?;Identity;Runtime;;;;HIGH;MEDIUM;M;;;;default;;
RA8;Execute an IdentityAttributeQuery;Consumption;AttributesFacade;executeIdentityAttributeQuery;;Cross-identity attribute sharing;Attributes;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RA9;Execute a RelationshipAttributeQuery;Consumption;AttributesFacade;executeRelationshipAttributeQuery;;Cross-identity attribute sharing;Attributes;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RAL1;Query AttributeListeners;Consumption;AttributeListenersFacade;getAttributeListeners;;Attribute automation;AttributeListeners;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RAL2;Get AttributeListener;Consumption;AttributeListenersFacade;getAttributeListener;;Attribute automation;AttributeListeners;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RAL3;Delete AttributeListener;Consumption;;;;Attribute automation;AttributeListeners;OPEN;;Identity;Runtime;;;;LOW;LOW;S;;;;default;;
RB1;Create a Blueprint of a Relationship Template;Consumption;;;Create a parametrizable Blueprint to create Relationship Templates with. This is used for creating specific business cards for Users.;;Blueprint;IDEA;;Identity;Runtime;;;;LOW;HIGH;HIGH;;;;default;;
RB2;Query Blueprints;Consumption;;;;;Blueprint;IDEA;;Identity;Runtime;;;;LOW;LOW;S;;;;default;;
RB3;Get Blueprint;Consumption;;;;;Blueprint;IDEA;;Identity;Runtime;;;;LOW;LOW;S;;;;default;;
RB4;Update Blueprint;Consumption;;;;;Blueprint;IDEA;;Identity;Runtime;;;;LOW;LOW;S;;;;default;;
RB5;Delete Blueprint;Consumption;;;;;Blueprint;IDEA;;Identity;Runtime;;;;LOW;LOW;S;;;;default;;
RB6;Create Relationship Template out of Blueprint;Consumption;;;;;Blueprint;IDEA;;Identity;Runtime;;;;LOW;MEDIUM;S;;;;default;;
RC1;Create Challenge;Transport;ChallengesFacade;createChallenge;Create a signed challenge.;;Challenges;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RC2;Validate Challenge;Transport;ChallengesFacade;validateChallenge;Validate a challenge.;;Challenges;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RD1;Create Device;Transport;DevicesFacade;createDevice;;Multi-device;Devices;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RD2;Query Devices;Transport;DevicesFacade;getDevices;;Multi-device;Devices;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RD3;Get Device;Transport;DevicesFacade;getDevice;;Multi-device;Devices;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RD4;Get Device Onboarding Info;Transport;DevicesFacade;getDeviceOnboardingInfo;;Multi-device;Devices;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RD5;Get Device Onboarding Token;Transport;DevicesFacade;getdeviceOnboardingToken;;Multi-device;Devices;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RD6;Update Device;Transport;DevicesFacade;updateDevice;;Multi-device;Devices;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RD7;Delete Device which is not onboarded yet;Transport;DevicesFacade;deleteDevice;;Multi-device;Devices;QUESTIONS;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RD8;Trigger Device deletion of onboarded Device;Transport;DevicesFacade;;;Multi-device;Devices;QUESTIONS;;Identity;Runtime;;;;LOW;MEDIUM;L;;;;default;;
RDR1;Create Draft;Consumption;DraftFacade;createDraft;;Cross-device draft handling;Drafts;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RDR2;Query Drafts;Consumption;DraftFacade;getDrafts;;Cross-device draft handling;Drafts;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RDR3;Get Draft;Consumption;DraftFacade;getDraft;;Cross-device draft handling;Drafts;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RDR4;Update Draft;Consumption;DraftFacade;updateDraft;;Cross-device draft handling;Drafts;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RDR5;Delete Draft;Consumption;DraftFacade;deleteDraft;;Cross-device draft handling;Drafts;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RF1;Upload own File;Transport;FilesFacade;uploadOwnFile;Uploads a new own file with metadata.;Arbitrary large data support;Files;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RF2;Query Files;Transport;FilesFacade;getFiles;Queries metadata of files owned by this Connector.;;Files;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RF3;Get own File;Transport;FilesFacade;getFile;;Arbitrary large data support;Files;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RF4;Get or load File;Transport;FilesFacade;getOrLoadFile;Loads a file of another identity. After it is loaded once, you can retrieve it without the need for the secret key by calling one of the GET-routes.;Arbitrary large data support;Files;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RF5;Download File;Transport;FilesFacade;downloadFile;Downloads the file with the given `id`.;Arbitrary large data support;Files;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RF6;Create Token for File;Transport;FilesFacade;createTokenForFile;Creates a `Token` for the `File` with the given `id`.;Arbitrary large data support;Files;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RF7;Create QRCode for File;Transport;FilesFacade;createQrCodeForFile;;Arbitrary large data support;Files;QUESTIONS;QR vs Qr, QR vs Tr;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RF8;Create Token QRCode for File;Transport;FilesFacade;createTokenQrCodeForFile;;Arbitrary large data support;Files;QUESTIONS;QR vs Qr, QR vs Tr;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RI1;Check Identity by Address;Transport;IdentityFacade;checkIdentity;;;Identities;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RIR1;Query incoming Requests;Consumption;IncomingRequestsFacade;getRequests;Queries incoming `Requests`.;Normalized requests/responses to and from users;Requests;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RIR10;Reject incoming Request;Consumption;IncomingRequestsFacade;reject;Rejects the incoming `Request` with the given `id`.;Normalized requests/responses to and from users;Requests;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RIR2;Get incoming Request;Consumption;IncomingRequestsFacade;getRequest;Fetches the incoming `Request` with the given `id`.;Normalized requests/responses to and from users;Requests;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RIR3;Set status of incoming Request to received;Consumption;IncomingRequestsFacade;received;;Request automation;Requests;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RIR4;Set status of incoming Request to check prerequisites;Consumption;IncomingRequestsFacade;checkPrerequisites;;Request automation;Requests;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RIR5;Set status of incoming Request to require manual decision;Consumption;IncomingRequestsFacade;requireManualDecision;;Request automation;Requests;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RIR6;Set status of incoming Request to complete;Consumption;IncomingRequestsFacade;complete;;Request automation;Requests;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RIR7;Check if incoming Request can be accepted;Consumption;IncomingRequestsFacade;canAccept;Checks if the `Request` with the given `id` can be accepted.;Normalized requests/responses to and from users;Requests;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RIR8;Accept incoming Request;Consumption;IncomingRequestsFacade;accept;Accepts the incoming `Request` with the given `id`.;Normalized requests/responses to and from users;Requests;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RIR9;Check if incoming Request can be rejected;Consumption;IncomingRequestsFacade;canReject;Checks if the `Request` with the given `id` can be rejected.;Normalized requests/responses to and from users;Requests;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RK1;Create own Token;Transport;TokensFacade;createOwnToken;;Normalized requests/responses to and from users;Tokens;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RK2;Load Token created by others;Transport;TokensFacade;loadPeerToken;;Share structured information over side-channel;Tokens;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RK3;Get Token by TokenID;Transport;TokensFacade;getToken;;Share structured information over side-channel;Tokens;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RK4;Query Tokens by parameters;Transport;TokensFacade;getTokens;;Share structured information over side-channel;Tokens;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RK5;Get QRCode for single Token;Transport;TokensFacade;getQRCodeForToken;;Share structured information over side-channel;Tokens;QUESTIONS;QR vs Qr, QR vs Tr;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RM1;Create Mail;Consumption;;;Creates a Mail as a specific types of Messages;Bidirectional unstructured communication;Mail;IDEA;;Identity;Runtime;;;;LOW;LOW;S;;;;default;;
RM1;Send message to recipient(s);Transport;MessagesFacade;sendMessage;;Bidirectional (un-)structured communication;Messages;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RM2;Query Mails;Consumption;;;;Bidirectional unstructured communication;Mail;IDEA;;Identity;Runtime;;;;LOW;LOW;S;;;;default;;
RM2;Query Messages;Transport;MessagesFacade;getMessages;;Bidirectional (un-)structured communication;Messages;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RM3;Get Mail;Consumption;;;;Bidirectional unstructured communication;Mail;IDEA;;Identity;Runtime;;;;LOW;LOW;S;;;;default;;
RM3;Get Message by MessageId;Transport;MessagesFacade;getMessage;;Bidirectional (un-)structured communication;Messages;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RM4;Get File Metadata of Attachment;Transport;MessagesFacade;getAttachmentMetadata;Returns the attachment's metadata of the given `attachmentId` of message with `messageId`.;Bidirectional (un-)structured communication;Messages;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RM5;Download File of Attachment;Transport;MessagesFacade;downloadAttachment;Downloads the file of the given `attachmentId` of message with `messageId`.;Bidirectional (un-)structured communication;Messages;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
ROR1;Check if outgoing Request can be created;Consumption;OutgoingRequestsFacade;canCreate;Validates the given `OutgoingRequest` before creating it;Normalized requests/responses to and from users;Requests;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
ROR2;Create outgoing Request;Consumption;OutgoingRequestsFacade;create;Creates a new outgoing `Request`.;Normalized requests/responses to and from users;Requests;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
ROR3;Query outgoing Requests;Consumption;OutgoingRequestsFacade;getRequests;Queries outgoing `Requests`.;Normalized requests/responses to and from users;Requests;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
ROR4;Get outgoing Request;Consumption;OutgoingRequestsFacade;getRequest;;Normalized requests/responses to and from users;Requests;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
ROR5;Create and complete outgoing Request from Relationship Template Response;Consumption;OutgoingRequestsFacade;createAndCompleteFromRelationshipTemplateResponse;;Normalized requests/responses to and from users;Requests;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
ROR6;Set status of outgoing Request to sent;Consumption;OutgoingRequestsFacade;sent;;Request automation;Requests;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
ROR7;Set status of outgoing Request to complete;Consumption;OutgoingRequestsFacade;complete;;Request automation;Requests;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
ROR8;Discards outgoing Request;Consumption;OutgoingRequestsFacade;discard;;Normalized requests/responses to and from users;Requests;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RR1;Create Relationship with RelationshipTemplate;Transport;RelationshipsFacade;createRelationship;Creates a `Relationship` to the creator of a given relationshipTemplateId. The `RelationshipTemplate` of the given `relationshipTemplateId` must come from another identity and must be loaded by `POST /RelationshipTemplates/Peer` first.;Mutual peer-to-peer relationships;Relationships;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RR10;Pin/mark as favorite relationship;Consumption;;;;;Relationships;IDEA;;User;AppRuntime;;;;LOW;MEDIUM;M;;;;default;;
RR2;Query Relationships;Transport;RelationshipsFacade;getRelationships;;Mutual peer-to-peer relationships;Relationships;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RR3;Get Relationship by RelationshipId;Transport;RelationshipsFacade;getRelationship;;Mutual peer-to-peer relationships;Relationships;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RR4;Get Relationship by Address;Transport;RelationshipsFacade;getRelationshipByAddress;;Mutual peer-to-peer relationships;Relationships;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RR5;Get Attributes for Relationship;Transport;RelationshipsFacade;getAttributesForRelationship;Queries attributes that are related to the given relationship.;Mutual peer-to-peer relationships;Relationships;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RR6;Accept Relationship Change;Transport;RelationshipsFacade;acceptRelationshipChange;Accepts the change with the given `changeId`. If the change exists but belongs to another relationship, this call will fail and return status 404.;Mutual peer-to-peer relationships;Relationships;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RR7;Reject Relationship Change;Transport;RelationshipsFacade;rejectRelationshipChange;Rejects the change with the given `changeId`. If the change exists but belongs to another relationship, this call will fail and return status 404.;Mutual peer-to-peer relationships;Relationships;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RR8;Revoke Relationship Change;Transport;RelationshipsFacade;revokeRelationshipChange;;Mutual peer-to-peer relationships;Relationships;QUESTIONS;;Identity;Runtime;;;;;;;;;;default;;
RR9;Set categorization of relationship;Consumption;;;;;Relationships;IDEA;;User;AppRuntime;;;;LOW;MEDIUM;M;;;;default;;
RRI1;Create requestItem to delete Relationship;Consumption;RequestItemFacade;;;;RequestItems;IDEA;;Identity;Runtime;;;;LOW;LOW;S;;;;default;;
RRI2;Create requestItem to inform about forced Relationship deletion;Consumption;RequestItemFacade;;;;RequestItems;IDEA;;Identity;Runtime;;;;LOW;LOW;S;;;;default;;
RRI3;Create requestItem to inform about forced Attribute deletion;Consumption;RequestItemFacade;;;;RequestItems;IDEA;;Identity;Runtime;;;;LOW;LOW;S;;;;default;;
RS1;Create Setting;Consumption;SettingFacade;createSetting;;Cross-device configuration;Settings;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RS2;Query Settings;Consumption;SettingFacade;getSettings;;Cross-device configuration;Settings;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RS3;Get Setting;Consumption;SettingFacade;getSetting;;Cross-device configuration;Settings;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RS4;Delete Setting;Consumption;SettingFacade;deleteSetting;;Cross-device configuration;Settings;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RS5;Update Setting;Consumption;SettingFacade;updateSetting;;Cross-device configuration;Settings;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RT1;Create own RelationshipTemplate;Transport;RelationshipTemplatesFacade;createOwnRelationshipTemplate;;Consent required before any data is shared;RelationshipTemplates;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RT2;Load Relationship Template created by others;Transport;RelationshipTemplatesFacade;loadPeerRelationshipTemplate;Loads a `RelationshipTemplate` created by others. This is a prerequisite for using the template while creating a new `Relationship`.;Consent required before any data is shared;RelationshipTemplates;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RT3;Query Relationship Templates;Transport;RelationshipTemplatesFacade;getRelationshipTemplates;;Consent required before any data is shared;RelationshipTemplates;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RT4;Get Relationship Template;Transport;RelationshipTemplatesFacade;getRelationshipTemplate;;Consent required before any data is shared;RelationshipTemplates;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RT5;Create QRCode for own Relationship Template;Transport;RelationshipTemplatesFacade;createQrCodeForOwnTemplate;;Consent required before any data is shared;RelationshipTemplates;QUESTIONS;QR vs Qr, QR vs Tr;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RT6;Create Token QRCode for own Relationship Template;Transport;RelationshipTemplatesFacade;createTokenQrCodeForOwnTemplate;;Consent required before any data is shared;RelationshipTemplates;QUESTIONS;QR vs Qr, QR vs Tr;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RT7;Create Token for own Relationship Template;Transport;RelationshipTemplatesFacade;createTokenForOwnTemplate;Creates a `Token` for the own `RelationshipTemplate` with the given `id`;Consent required before any data is shared;RelationshipTemplates;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RU1;Get currently used Identity;Transport;AccountFacade;getIdentityInfo;;Multi-profile;Account;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RU2;Get currently used Device;Transport;AccountFacade;getDeviceInfo;;Multi-device;Account;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RU3;Register PushNotificationToken at Backbone;Transport;AccountFacade;registerPushNotificationToken;;Multi-device;Account;QUESTIONS;rather AppRuntime?;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RU4;Synchronize updates of Backbone;Transport;AccountFacade;syncEverything;Syncs the Identity's Messages and Relationships with the Backbone. Checks for new Relationships as well as incoming changes of existing ones. Checks for new or updated Messages. Returns all affected Relationships and Messages.;Synchronization;Account;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RU5;Synchronize Datawallet updates to Backbone;Transport;AccountFacade;syncDatawallet;;Multi-device synchronization;Account;QUESTIONS;rather AppRuntime?;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RU6;Get synchronization status with Backbone;Transport;AccountFacade;getSyncInfo;;Multi-device synchronization;Account;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RU7;Enable automated Datawallet synchronization with Backbone;Transport;AccountFacade;enableAutoSync;;Multi-device synchronization;Account;QUESTIONS;rather AppRuntime?;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RU8;Disable automated Datawallet synchronization with Backbone;Transport;AccountFacade;disableAutoSync;;Multi-device synchronization;Account;QUESTIONS;rather AppRuntime?;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RU9;Load item from truncated reference;Transport;AccountFacade;loadItemFromTruncatedReference;;Share information over side-channel;Account;QUESTIONS;rather somewhere else?;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RY1;Load Token by truncated reference (without having an account);Anonymous;AnonymousFacade;loadPeerTokenByTruncatedReference;;Share information over side-channel;AnonymousTokens;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
RY2;Load Token by id and key (without having an account);Anonymous;AnonymousFacade;loadPeerTokenByIdAndKey;;Share information over side-channel;AnonymousTokens;DONE;;Identity;Runtime;;;;n/a;n/a;n/a;;;;default;;
